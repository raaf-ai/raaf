# frozen_string_literal: true

require "bundler/gem_tasks"
require "rspec/core/rake_task"

RSpec::Core::RakeTask.new(:spec)

require "rubocop/rake_task"

RuboCop::RakeTask.new

task default: %i[spec rubocop]

# Load shared tasks from the root shared directory
$LOAD_PATH.unshift(File.expand_path("../shared/lib", __dir__))
require "raaf/shared/tasks"
RAAF::Shared::Tasks.load("code")

# Custom tasks
namespace :gem do
  desc "Build and install the gem locally"
  task :install do
    system "gem build *.gemspec"
    system "gem install *.gem"
  end

  desc "Clean built gems"
  task :clean do
    system "rm -f *.gem"
  end
end

namespace :docs do
  desc "Generate YARD documentation"
  task :generate do
    system "yard doc"
  end

  desc "Serve documentation locally"
  task :serve do
    system "yard server --reload"
  end
end

# CI task
desc "Run all CI checks (specs, rubocop, and code validation)"
task ci: [:spec, :rubocop, "code:validate_test"]

namespace :spec do
  desc "Run tests with coverage"
  task :coverage do
    ENV["COVERAGE"] = "true"
    Rake::Task["spec"].execute
  end

  desc "Run tests in verbose mode"
  task :verbose do
    ENV["VERBOSE"] = "true"
    Rake::Task["spec"].execute
  end

  desc "Run unit tests only (default)"
  RSpec::Core::RakeTask.new(:unit) do |t|
    t.rspec_opts = "--tag ~integration --tag ~performance --tag ~cost --tag ~acceptance --tag ~compliance"
  end

  desc "Run integration tests"
  RSpec::Core::RakeTask.new(:integration) do |t|
    t.rspec_opts = "--tag integration"
  end

  desc "Run performance tests"
  RSpec::Core::RakeTask.new(:performance) do |t|
    t.rspec_opts = "--tag performance"
  end

  desc "Run cost tests"
  RSpec::Core::RakeTask.new(:cost) do |t|
    t.rspec_opts = "--tag cost"
  end

  desc "Run acceptance tests"
  RSpec::Core::RakeTask.new(:acceptance) do |t|
    t.rspec_opts = "--tag acceptance"
  end

  desc "Run compliance tests"
  RSpec::Core::RakeTask.new(:compliance) do |t|
    t.rspec_opts = "--tag compliance"
  end

  desc "Run all tests (unit, integration, performance, cost, acceptance, compliance)"
  task :all do
    # Run tests with all tags to ensure nothing is excluded
    system("bundle exec rspec --tag integration --tag performance --tag cost --tag acceptance --tag compliance --tag ~skip")
    # Also run unit tests (those without special tags)
    system("bundle exec rspec --tag ~integration --tag ~performance --tag ~cost --tag ~acceptance --tag ~compliance")
  end
end
