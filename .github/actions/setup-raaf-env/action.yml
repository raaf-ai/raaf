name: 'Setup RAAF Environment'
description: 'Sets up Ruby load paths to simulate installed RAAF gems'
inputs:
  target-gem:
    description: 'The gem being tested (e.g., core, dsl, providers)'
    required: true
  install-dependencies:
    description: 'Whether to install bundle dependencies for all gems'
    required: false
    default: 'true'
  skip-gem-dependencies:
    description: 'Skip installing gem dependencies (for validation tasks)'
    required: false
    default: 'false'
runs:
  using: 'composite'
  steps:
    - name: Install gem dependencies
      if: inputs.install-dependencies == 'true' && inputs.skip-gem-dependencies == 'false'
      shell: bash
      run: |
        # Determine which gems need to be installed based on target
        # Note: Most gems depend on raaf-core which isn't published yet
        # We only install external dependencies, not inter-gem dependencies
        
        case "${{ inputs.target-gem }}" in
          core)
            # Core has no RAAF dependencies
            echo "Installing dependencies for core"
            (cd core && bundle install)
            ;;
          tracing)
            # Tracing depends on core but we skip that dependency
            echo "Installing dependencies for tracing (skipping raaf-core dependency)"
            (cd tracing && bundle install --without raaf-core || bundle install)
            ;;
          providers)
            # Providers has raaf-core commented out
            echo "Installing dependencies for providers"
            (cd providers && bundle install)
            ;;
          dsl)
            # DSL needs only external dependencies
            echo "Installing dependencies for dsl (skipping raaf-* dependencies)"
            (cd dsl && bundle install --without raaf-core || bundle install)
            ;;
          *)
            # For other gems, only install if they don't have raaf-* dependencies
            # or handle the failure gracefully
            echo "Attempting to install dependencies for ${{ inputs.target-gem }}"
            if [ -d "${{ inputs.target-gem }}" ]; then
              (cd "${{ inputs.target-gem }}" && bundle install 2>/dev/null) || \
                echo "Skipping bundle install for ${{ inputs.target-gem }} due to unpublished dependencies"
            fi
            ;;
        esac
    
    - name: Install only external dependencies (skip raaf-* gems)
      if: inputs.install-dependencies == 'true' && inputs.skip-gem-dependencies == 'true'
      shell: bash
      run: |
        # For validation tasks, we need external gems but not raaf-* dependencies
        echo "Installing only external dependencies for ${{ inputs.target-gem }}"
        
        if [ -d "${{ inputs.target-gem }}" ]; then
          cd "${{ inputs.target-gem }}"
          
          # Install dependencies directly without Bundler to avoid dependency resolution issues
          echo "Installing dependencies without bundler for validation"
          
          # First, ensure bundler and rake are installed
          gem install bundler rake
          
          # Read required gems from gemspec (excluding raaf-* gems)
          ruby -e "
            spec = Gem::Specification.load(Dir.glob('*.gemspec').first)
            spec.runtime_dependencies.each do |dep|
              next if dep.name.start_with?('raaf-')
              puts \"Installing #{dep.name} #{dep.requirement}\"
              system('gem', 'install', dep.name, '-v', dep.requirement.to_s.gsub('~>', '>='))
            end
            spec.development_dependencies.each do |dep|
              next if dep.name.start_with?('raaf-')
              puts \"Installing #{dep.name} #{dep.requirement}\"
              # For development deps, install without version constraints if no specific version
              if dep.requirement.to_s == '>= 0'
                system('gem', 'install', dep.name)
              else
                system('gem', 'install', dep.name, '-v', dep.requirement.to_s.gsub('~>', '>='))
              end
            end
          "
          
          # Install additional gems that might be needed
          gem install rspec simplecov webmock vcr pry pry-byebug yard || true
        fi
    
    - name: Setup Ruby load paths
      shell: bash
      run: |
        # Build RUBYOPT environment variable with all necessary load paths
        RUBY_PATHS=""
        
        # Determine which gems to add to load path based on target
        case "${{ inputs.target-gem }}" in
          core)
            # Core only needs its own path
            GEMS_TO_ADD="core"
            ;;
          providers)
            # Providers needs core and base gems
            # Memory is included in load path but not installed
            GEMS_TO_ADD="core tracing memory guardrails tools providers"
            ;;
          dsl)
            # DSL needs everything
            # Memory is included in load path but not installed
            GEMS_TO_ADD="core tracing memory guardrails tools providers dsl"
            ;;
          *)
            # For other gems, add core and the target
            GEMS_TO_ADD="core ${{ inputs.target-gem }}"
            ;;
        esac
        
        # Add each gem's lib directory to the path
        for gem in $GEMS_TO_ADD; do
          if [ -d "$gem/lib" ]; then
            RUBY_PATHS="$RUBY_PATHS -I$(pwd)/$gem/lib"
          fi
        done
        
        # Export for use in subsequent steps
        echo "RUBYOPT=$RUBY_PATHS" >> $GITHUB_ENV
        echo "Set up Ruby load paths: $RUBY_PATHS"