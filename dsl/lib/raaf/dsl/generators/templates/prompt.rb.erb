# frozen_string_literal: true

<% if agent_module_name -%>
module <%= agent_module_name %>
<% end -%>
  # <%= agent_class_name %> Prompt Class
  #
  # This class manages prompts for the <%= agent_class_name %> agent.
  # It provides structured prompt building with automatic context access.
  #
  # @example Using the prompt class
  #   prompt = <%= class_path_name %>Prompt.new(data: "sample data")
  #   system_prompt = prompt.system
  #   user_prompt = prompt.user
  #
  class <%= agent_class_name %>Prompt < RAAF::DSL::Prompts::Base
    # System prompt that defines the AI's role and behavior
    def system
      <<~SYSTEM
        You are a specialized AI assistant for <%= name.humanize.downcase %> analysis.
        
        Your role is to:
        - Analyze the provided data thoroughly
        - Generate actionable insights
        - Provide confidence scores for your analysis
        - Include relevant metadata and source information
        
        Key capabilities:
        - Data pattern recognition
        - Trend analysis
        - Anomaly detection
        - Statistical insights
        
        Response format:
        - Always respond with valid JSON
        - Include confidence scores (0-100)
        - Provide clear explanations
        - Include metadata for traceability
        
        Quality standards:
        - Be accurate and factual
        - Acknowledge uncertainty when appropriate
        - Provide actionable recommendations
        - Use professional language
      SYSTEM
    end

    # User prompt that contains the specific request and data
    def user
      base_prompt = <<~USER
        Please analyze the following data:
        
        **Data:** #{data}
      USER

      # Add context if provided
      if context
        base_prompt += "\n\n**Context:** #{context}"
      end

      # Add processing options if provided
      if options
        base_prompt += "\n\n**Options:** #{options}"
      end

      base_prompt += <<~USER
        
        Please provide:
        1. A comprehensive analysis of the data
        2. Key insights and patterns
        3. Your confidence level (0-100)
        4. Relevant metadata including source and timestamp
        
        Respond with valid JSON following the defined schema.
      USER

      base_prompt
    end

    # Additional helper method for specialized prompts
    def analysis_prompt(focus_area: nil)
      prompt = user
      
      if focus_area
        prompt += "\n\nPlease focus specifically on: #{focus_area}"
      end
      
      prompt
    end

    # Method to get prompt with custom instructions
    def custom_prompt(instructions:)
      <<~PROMPT
        #{system}
        
        **Custom Instructions:** #{instructions}
        
        #{user}
      PROMPT
    end
  end
<% if agent_module_name -%>
end
<% end -%>